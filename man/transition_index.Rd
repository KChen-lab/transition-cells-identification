% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transition_index.R
\name{transition_index}
\alias{transition_index}
\title{Calculate transition index}
\usage{
transition_index(
  data,
  highly_variable_gene = NULL,
  group = "seurat_clusters",
  n_neighbors = 300,
  n_gene = 50,
  ...
)
}
\arguments{
\item{data}{Seurat object containing both count matrix and metadata such as neighboring
results for a single-cell dataset.}

\item{highly_variable_gene}{A gene list containing top most variable genes. Calculated
by \code{var} function by default.}

\item{group}{The cell group highly_variable_genes selected based on. It should be a column
name of data@meta.data, such as 'seurat_clusters','cell_type','time_point'. Using
'seurat_clusters' by default.}

\item{n_gene}{The number of top most variable genes used in calculating GPPCCs. 50 by default.}

\item{n_neighbor}{The number of neighboring cells used to calculate GPPCCs. 300 by default.}
}
\value{
A Seurat object. Calculated transition index is store as a column in the metadata.
}
\description{
This is the function calculating transition index that reflects the transition
probability of a cell. The transition index we defined is inspired by Kolmogorov-Smirnov
statistic. We assume there are both transition cells and stable cells captured by
scRNA-seq in a developmental process. We first find the archetype of transition
cell and stable cell by using modified Kolmogorov-Smirnov statistic. As proved
mathematically, there are more gene pairs whose absolute value of Pearson’s
correlation coefficients are close to 1 in transition cells than stable cells.
Thus, based on the distribution difference, by finding the maximum difference
among all cells, we identify archetypal stable cells and transition cells. To
count and compare the number of gene pairs exceeding such threshold in each cell,
we define transition index by summarizing the percentage of gene pairs whose
absolute value of Pearson’s correlation coefficients are between argmax_x(D_max)
and argmin_x(D_max).
}
